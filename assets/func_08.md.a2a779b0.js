import{_ as s,o as a,c as n,a as l}from"./app.10a26414.js";const F=JSON.parse('{"title":"函数式编程 08 范畴论: Semigroup","description":"","frontmatter":{"title":"函数式编程 08 范畴论: Semigroup","tags":["函数式编程"]},"headers":[{"level":2,"title":"一、需求","slug":"一、需求","link":"#一、需求","children":[]},{"level":2,"title":"Semigroup 代码","slug":"semigroup-代码","link":"#semigroup-代码","children":[]},{"level":2,"title":"详情地址","slug":"详情地址","link":"#详情地址","children":[]}],"relativePath":"func/08.md"}'),o={name:"func/08.md"},p=l(`<h1 id="semigroup" tabindex="-1">Semigroup <a class="header-anchor" href="#semigroup" aria-hidden="true">#</a></h1><h2 id="一、需求" tabindex="-1">一、需求 <a class="header-anchor" href="#一、需求" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 抽象一个 concat() 函数。</span></span>
<span class="line"></span></code></pre></div><h2 id="semigroup-代码" tabindex="-1">Semigroup 代码 <a class="header-anchor" href="#semigroup-代码" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 定义一个类型为 Add 的 Semigroup 盒子</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Add </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  value</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// concat 接收一个类型为 Add 的 Semigroup 盒子作为入参</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">concat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">box</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(value </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出一个 value=6 的 Add 盒子</span></span>
<span class="line"><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 定义一个类型为 Multi 的 Semigroup 盒子</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Multi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  value</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// concat 接收一个类型为 Multi 的Semigroup 盒子作为入参</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">concat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">box</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Multi</span><span style="color:#A6ACCD;">(value </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出一个 value=60 的 Multi 盒子</span></span>
<span class="line"><span style="color:#82AAFF;">Multi</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Multi</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Multi</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="详情地址" tabindex="-1"><a href="https://juejin.cn/book/7173591403639865377/section/7175423154301435962" target="_blank" rel="noreferrer">详情地址</a> <a class="header-anchor" href="#详情地址" aria-hidden="true">#</a></h2>`,7),e=[p];function t(c,r,A,i,y,C){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
